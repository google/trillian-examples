// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package configpb;

import "github.com/google/trillian/crypto/keyspb/keyspb.proto";
import "github.com/google/trillian/crypto/sigpb/sigpb.proto";
import "google/protobuf/any.proto";

// HubMultiConfig wraps up a HubBackendSet and corresponding HubConfigSet so
// that they can easily be parsed as a single proto.
message HubMultiConfig {
  // The set of backends that this configuration will use to send requests to.
  // The names of the backends in the HubBackendSet must all be distinct.
  HubBackendSet backends = 1;
  // The set of hubs that will use the above backends. All the protos in this
  // HubConfigSet must set a valid hub_backend_name for the config to be usable.
  HubConfigSet hub_configs = 2;
}

// HubBackendSet describes the set of Trillian backends that support a gossip hub.
message HubBackendSet {
  repeated HubBackend backend = 1;
}

// HubBackend describes a single Trillian backend.
message HubBackend {
  // name defines the name of the hub backend for use in HubConfig messages and must be unique.
  string name = 1;
  // backend_spec defines the RPC endpoint that clients should use to send requests
  // to this hub backend. These should be in the same format as rpcBackendFlag in the
  // hub_server main and must not be an empty string.
  string backend_spec = 2;
}

// HubConfigSet describes the different hub instances that this instance will run.
message HubConfigSet {
  repeated HubConfig config = 1;
}

// HubConfig describes the configuration options for a hub instance.
message HubConfig {
  int64 log_id = 1;
  string prefix = 2;
  repeated TrackedSource source = 3;
  google.protobuf.Any private_key = 4;
  // The public key is included for the convenience of test tools (and obviously
  // should match the private key above); it is not used by the hub.
  keyspb.PublicKey public_key = 5;
  // hub_backend_name if set indicates which backend serves this hub. The name must be
  // one of those defined in the HubBackendSet.
  string hub_backend_name = 11;
}

// TrackedSource describes a source that this gossip hub will accept signed blobs from.
message TrackedSource {
  string name = 1;
  string id = 2;
  keyspb.PublicKey public_key = 3;
  sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 4;
}
