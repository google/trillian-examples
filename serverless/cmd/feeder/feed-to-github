#!/bin/bash
#
# feed-to-github is a wrapper around the serverless `feeder` command which uploads the result
# of feeding a checkpoint to one or more witnesses back to the source log via a github PR.
#
# This script expects the `git`, `gh`, and `feeder` (built from the same directory this script
# is in) to be present in the PATH.
#
# GLOBALS:
#  FEEDER_GITHUB_TOKEN: 
#     (optional)
#     Github Personal Access Token to use for creating witness PR.
#     If unset, uses "ambient" access privilesges already present.
#  GIT_USERNAME:
#    (required)
#     GitHub username to associate with the witness PR commit.
#  GIT_EMAIL:
#     (required)
#     Email address to associate with the witness PR commit.


SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

function usage() {
  cat <<EOF
Usage:
 feed-to-github <log_github_owner/repo> <log_path> <feeder_config_file> [interval_seconds]

Where:
 <log_github_owner/repo> is the repo owner/fragment from the repo URL.
     e.g. github.com/AlCutter/serverless-test -> AlCutter/serverless-test
 <witness_github_owner/repo> is the repo owner/fragment of the log fork to use for the PR branch.
 <log_repo_path> is the path from the root of the rep where the log files can be found,
 <feeder_config_fil> is the path to the config file for the serverless/cmd/feeder command.
 [interval_seconds] if set, the script will continously feed and (if needed) create witness PRs sleeping
     the specified number of seconds between attempts. If not provided, the tool does a one-shot feed.

EOF
  exit 1
}

function check_exist() {
  local missing=()
  for i in $*; do
    if ! type ${i} &> /dev/null; then
      missing+=("${i}")
    fi
  done
  if [[ ! -z ${missing} ]]; then
    echo "Please install the following tool(s) in a location on the PATH:"
    echo "${missing[@]}"
    exit 1
  fi
}

function check_git() {
  local bad=0
  if [[ -z "$(git config user.name)" && -z "${GIT_USERNAME}" ]]; then
    echo "Please set GIT_USERNAME environment variable - this is used for the witness PR commit"
    bad=1
  fi
  if [[ -z "$(git config user.email)" && -z "${GIT_EMAIL}" ]]; then
    echo "Please set GIT_EMAIL environment variable - this is used for the witness PR commit"
    bad=1
  fi
  if [[ "${bad}" -ne 0 ]]; then
    exit 1
  fi
}

function sleep_or_exit() {
  if [[ "${1}" != "" ]]; then
    echo "Sleeping ${1}"
    sleep "${1}"
  else
    exit 0
  fi
}

function main() {
  if [ $# -lt 4 ]; then
    usage
  fi
  check_exist git gh
  if ! type feeder &> /dev/null; then
    echo "Please run: "
    echo " go build ${SCRIPT_DIR}"
    echo "and ensure the feeder binary is on the PATH"
    exit 1
  fi
  check_git

  if [[ ! -z "${FEEDER_GITHUB_TOKEN}" ]]; then
    echo ${FEEDER_GITHUB_TOKEN} | gh auth login --with-token
  fi

  local log_repo="${1}"
  local fork_repo="${2}"
  local fork_owner="$(echo ${fork_repo} | cut -f1 -d/)"
  local log_path="${3}"
  local feeder_conf="$(readlink -f -n ${4})"
  local interval="${5}"
  local repo_url="github.com/${repo}"
  local temp="$(mktemp -d)"

  trap "rm -fr ${temp}" EXIT

  # Clone the fork of the log so we can make a PR branch on it with the updated checkpoint.witness file
  git clone -o origin "https://${GIT_USERNAME}:${FEEDER_GITHUB_TOKEN}@github.com/${fork_repo}.git" "${temp}"
  cd "${temp}"

  git config user.name "${GIT_USERNAME}"
  git config user.email "${GIT_EMAIL}"
  git remote add upstream "https://github.com/${log_repo}.git"
  git fetch --all
  git branch -u upstream/master
  echo "[Starting feeding]---------------------------------------------------"

  while true; do
    git pull

    # Run the feeder to gather new signatures
    cd "${SCRIPT_DIR}"
    feeder --config_file="${feeder_conf}" --logtostderr --input="https://raw.githubusercontent.com/${log_repo}/master/${log_path}/checkpoint" --output="${temp}/${log_path}/checkpoint.witnessed" -v 2

    # Create a witness PR if necessary
    cd "${temp}"

    local diff_stats=$(git diff --numstat | grep "checkpoint.witnessed")
    local added=$(echo "${diff_stats}" | awk -- '{print $1}')

    # If we've added a signature, or updated the checkpoint from the previously witnessed one, we should
    # see some added lines reported in the stats.
    if [[ "${added}" -eq "0" ]]; then
      echo "No signatures added"
      sleep_or_exit ${interval}
      continue
    fi

    local cp_size="$(sed -n 2p ${log_path}/checkpoint.witnessed)"
    local cp_hash="$(sed -n 3p ${log_path}/checkpoint.witnessed)"
    local branch="witness_${cp_hash}"

    git stash > /dev/null
    git checkout -b "${branch}" > /dev/null
    git stash pop > /dev/null

    git commit -a -m "Witness checkpoint@${size}"
    git push -f origin "${branch}"
    gh pr create -R "${log_repo}" --title="Witness @ ${cp_size}" -f --head="${fork_owner}:${branch}"

    git checkout master
    git branch -D ${branch}

    echo "[Feed cycle complete]------------------------------------------------"
    sleep_or_exit ${interval}
  done
}

main $*
