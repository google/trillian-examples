// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package configpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	keyspb "github.com/google/trillian/crypto/keyspb"
	sigpb "github.com/google/trillian/crypto/sigpb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// HubMultiConfig wraps up a HubBackendSet and corresponding HubConfigSet so
// that they can easily be parsed as a single proto.
type HubMultiConfig struct {
	// The set of backends that this configuration will use to send requests to.
	// The names of the backends in the HubBackendSet must all be distinct.
	Backends *HubBackendSet `protobuf:"bytes,1,opt,name=backends,proto3" json:"backends,omitempty"`
	// The set oubs that will use the above backends. All the protos in this
	// HubConfigSet must set a valid hub_backend_name for the config to be usable.
	HubConfigs           *HubConfigSet `protobuf:"bytes,2,opt,name=hub_configs,json=hubConfigs,proto3" json:"hub_configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HubMultiConfig) Reset()         { *m = HubMultiConfig{} }
func (m *HubMultiConfig) String() string { return proto.CompactTextString(m) }
func (*HubMultiConfig) ProtoMessage()    {}
func (*HubMultiConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

func (m *HubMultiConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HubMultiConfig.Unmarshal(m, b)
}
func (m *HubMultiConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HubMultiConfig.Marshal(b, m, deterministic)
}
func (m *HubMultiConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HubMultiConfig.Merge(m, src)
}
func (m *HubMultiConfig) XXX_Size() int {
	return xxx_messageInfo_HubMultiConfig.Size(m)
}
func (m *HubMultiConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HubMultiConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HubMultiConfig proto.InternalMessageInfo

func (m *HubMultiConfig) GetBackends() *HubBackendSet {
	if m != nil {
		return m.Backends
	}
	return nil
}

func (m *HubMultiConfig) GetHubConfigs() *HubConfigSet {
	if m != nil {
		return m.HubConfigs
	}
	return nil
}

// HubBackendSet describes the set of Trillian backends that support a gossip hub.
type HubBackendSet struct {
	Backend              []*HubBackend `protobuf:"bytes,1,rep,name=backend,proto3" json:"backend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HubBackendSet) Reset()         { *m = HubBackendSet{} }
func (m *HubBackendSet) String() string { return proto.CompactTextString(m) }
func (*HubBackendSet) ProtoMessage()    {}
func (*HubBackendSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}

func (m *HubBackendSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HubBackendSet.Unmarshal(m, b)
}
func (m *HubBackendSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HubBackendSet.Marshal(b, m, deterministic)
}
func (m *HubBackendSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HubBackendSet.Merge(m, src)
}
func (m *HubBackendSet) XXX_Size() int {
	return xxx_messageInfo_HubBackendSet.Size(m)
}
func (m *HubBackendSet) XXX_DiscardUnknown() {
	xxx_messageInfo_HubBackendSet.DiscardUnknown(m)
}

var xxx_messageInfo_HubBackendSet proto.InternalMessageInfo

func (m *HubBackendSet) GetBackend() []*HubBackend {
	if m != nil {
		return m.Backend
	}
	return nil
}

// HubBackend describes a single Trillian backend.
type HubBackend struct {
	// name defines the name of the hub backend for use in HubConfig messages and must be unique.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// backend_spec defines the RPC endpoint that clients should use to send requests
	// to this hub backend. These should be in the same format as rpcBackendFlag in the
	// hub_server main and must not be an empty string.
	BackendSpec          string   `protobuf:"bytes,2,opt,name=backend_spec,json=backendSpec,proto3" json:"backend_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HubBackend) Reset()         { *m = HubBackend{} }
func (m *HubBackend) String() string { return proto.CompactTextString(m) }
func (*HubBackend) ProtoMessage()    {}
func (*HubBackend) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}

func (m *HubBackend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HubBackend.Unmarshal(m, b)
}
func (m *HubBackend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HubBackend.Marshal(b, m, deterministic)
}
func (m *HubBackend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HubBackend.Merge(m, src)
}
func (m *HubBackend) XXX_Size() int {
	return xxx_messageInfo_HubBackend.Size(m)
}
func (m *HubBackend) XXX_DiscardUnknown() {
	xxx_messageInfo_HubBackend.DiscardUnknown(m)
}

var xxx_messageInfo_HubBackend proto.InternalMessageInfo

func (m *HubBackend) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HubBackend) GetBackendSpec() string {
	if m != nil {
		return m.BackendSpec
	}
	return ""
}

// HubConfigSet describes the different hub instances that this instance will run.
type HubConfigSet struct {
	Config               []*HubConfig `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *HubConfigSet) Reset()         { *m = HubConfigSet{} }
func (m *HubConfigSet) String() string { return proto.CompactTextString(m) }
func (*HubConfigSet) ProtoMessage()    {}
func (*HubConfigSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{3}
}

func (m *HubConfigSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HubConfigSet.Unmarshal(m, b)
}
func (m *HubConfigSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HubConfigSet.Marshal(b, m, deterministic)
}
func (m *HubConfigSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HubConfigSet.Merge(m, src)
}
func (m *HubConfigSet) XXX_Size() int {
	return xxx_messageInfo_HubConfigSet.Size(m)
}
func (m *HubConfigSet) XXX_DiscardUnknown() {
	xxx_messageInfo_HubConfigSet.DiscardUnknown(m)
}

var xxx_messageInfo_HubConfigSet proto.InternalMessageInfo

func (m *HubConfigSet) GetConfig() []*HubConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// HubConfig describes the configuration options for a hub instance.
type HubConfig struct {
	LogId      int64            `protobuf:"varint,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	Prefix     string           `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Source     []*TrackedSource `protobuf:"bytes,3,rep,name=source,proto3" json:"source,omitempty"`
	PrivateKey *any.Any         `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// The public key is included for the convenience of test tools (and obviously
	// should match the private key above); it is not used by the hub.
	PublicKey *keyspb.PublicKey `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// hub_backend_name if set indicates which backend serves this hub. The name must be
	// one of those defined in the HubBackendSet.
	HubBackendName       string   `protobuf:"bytes,11,opt,name=hub_backend_name,json=hubBackendName,proto3" json:"hub_backend_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HubConfig) Reset()         { *m = HubConfig{} }
func (m *HubConfig) String() string { return proto.CompactTextString(m) }
func (*HubConfig) ProtoMessage()    {}
func (*HubConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{4}
}

func (m *HubConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HubConfig.Unmarshal(m, b)
}
func (m *HubConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HubConfig.Marshal(b, m, deterministic)
}
func (m *HubConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HubConfig.Merge(m, src)
}
func (m *HubConfig) XXX_Size() int {
	return xxx_messageInfo_HubConfig.Size(m)
}
func (m *HubConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HubConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HubConfig proto.InternalMessageInfo

func (m *HubConfig) GetLogId() int64 {
	if m != nil {
		return m.LogId
	}
	return 0
}

func (m *HubConfig) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *HubConfig) GetSource() []*TrackedSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *HubConfig) GetPrivateKey() *any.Any {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *HubConfig) GetPublicKey() *keyspb.PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *HubConfig) GetHubBackendName() string {
	if m != nil {
		return m.HubBackendName
	}
	return ""
}

// TrackedSource describes a source that this gossip hub will accept signed blobs from.
type TrackedSource struct {
	Name                 string                              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string                              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	PublicKey            *keyspb.PublicKey                   `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	HashAlgorithm        sigpb.DigitallySigned_HashAlgorithm `protobuf:"varint,4,opt,name=hash_algorithm,json=hashAlgorithm,proto3,enum=sigpb.DigitallySigned_HashAlgorithm" json:"hash_algorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *TrackedSource) Reset()         { *m = TrackedSource{} }
func (m *TrackedSource) String() string { return proto.CompactTextString(m) }
func (*TrackedSource) ProtoMessage()    {}
func (*TrackedSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}

func (m *TrackedSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackedSource.Unmarshal(m, b)
}
func (m *TrackedSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackedSource.Marshal(b, m, deterministic)
}
func (m *TrackedSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackedSource.Merge(m, src)
}
func (m *TrackedSource) XXX_Size() int {
	return xxx_messageInfo_TrackedSource.Size(m)
}
func (m *TrackedSource) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackedSource.DiscardUnknown(m)
}

var xxx_messageInfo_TrackedSource proto.InternalMessageInfo

func (m *TrackedSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrackedSource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TrackedSource) GetPublicKey() *keyspb.PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *TrackedSource) GetHashAlgorithm() sigpb.DigitallySigned_HashAlgorithm {
	if m != nil {
		return m.HashAlgorithm
	}
	return sigpb.DigitallySigned_NONE
}

func init() {
	proto.RegisterType((*HubMultiConfig)(nil), "configpb.HubMultiConfig")
	proto.RegisterType((*HubBackendSet)(nil), "configpb.HubBackendSet")
	proto.RegisterType((*HubBackend)(nil), "configpb.HubBackend")
	proto.RegisterType((*HubConfigSet)(nil), "configpb.HubConfigSet")
	proto.RegisterType((*HubConfig)(nil), "configpb.HubConfig")
	proto.RegisterType((*TrackedSource)(nil), "configpb.TrackedSource")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0xdb, 0xdd, 0xb2, 0x9d, 0xb4, 0x11, 0x98, 0x65, 0x09, 0x7b, 0x5a, 0x22, 0x0e, 0x95,
	0x90, 0x1c, 0xd4, 0x6a, 0xc5, 0x81, 0x03, 0x5a, 0x96, 0x43, 0x51, 0x05, 0x42, 0x2e, 0xf7, 0xc8,
	0x4e, 0xdc, 0xc4, 0xaa, 0x1b, 0x5b, 0xf9, 0x40, 0xe4, 0xc2, 0x8f, 0xe2, 0x07, 0x22, 0x54, 0xdb,
	0x29, 0x2d, 0xaa, 0xc4, 0x5e, 0x12, 0x8f, 0xe7, 0xbd, 0x99, 0x37, 0x6f, 0x0c, 0xe3, 0x44, 0x15,
	0x6b, 0x91, 0x61, 0x5d, 0xaa, 0x5a, 0xa1, 0x0b, 0x1b, 0x69, 0x76, 0x7d, 0x9b, 0x89, 0x3a, 0x6f,
	0x18, 0x4e, 0xd4, 0x36, 0xca, 0x94, 0xca, 0x24, 0x8f, 0xea, 0x52, 0x48, 0x29, 0x68, 0x11, 0x25,
	0x65, 0xab, 0x6b, 0x15, 0x6d, 0x78, 0x5b, 0x69, 0xe6, 0x7e, 0xb6, 0xc0, 0xf5, 0xfc, 0xff, 0xb4,
	0x6a, 0x57, 0xdf, 0x7e, 0x1d, 0xe9, 0x85, 0x43, 0x9a, 0x88, 0x35, 0xeb, 0x88, 0x16, 0xad, 0x4d,
	0x85, 0x3f, 0xc1, 0x5f, 0x34, 0xec, 0x73, 0x23, 0x6b, 0x71, 0x6f, 0xa4, 0xa1, 0x39, 0x5c, 0x30,
	0x9a, 0x6c, 0x78, 0x91, 0x56, 0x41, 0xef, 0xa6, 0x37, 0xf5, 0x66, 0xcf, 0x71, 0xa7, 0x1a, 0x2f,
	0x1a, 0xf6, 0xc1, 0x26, 0x57, 0xbc, 0x26, 0x7b, 0x20, 0x7a, 0x0b, 0x5e, 0xde, 0xb0, 0xd8, 0xe2,
	0xaa, 0xa0, 0x6f, 0x78, 0x57, 0x47, 0x3c, 0x5b, 0x7e, 0x47, 0x83, 0xbc, 0x8b, 0xaa, 0xf0, 0x3d,
	0x4c, 0x8e, 0x6a, 0x22, 0x0c, 0x8f, 0x5c, 0xd5, 0xa0, 0x77, 0x33, 0x98, 0x7a, 0xb3, 0xcb, 0x53,
	0xdd, 0x49, 0x07, 0x0a, 0xef, 0x01, 0xfe, 0x5e, 0x23, 0x04, 0x67, 0x05, 0xdd, 0x72, 0x23, 0x7c,
	0x44, 0xcc, 0x19, 0xbd, 0x84, 0xb1, 0x03, 0xc7, 0x95, 0xe6, 0x89, 0x11, 0x37, 0x22, 0x9e, 0xbb,
	0x5b, 0x69, 0x9e, 0x84, 0xef, 0x60, 0x7c, 0xa8, 0x10, 0xbd, 0x86, 0xa1, 0x6d, 0xea, 0x34, 0x3c,
	0x3d, 0x31, 0x09, 0x71, 0x90, 0xf0, 0x77, 0x0f, 0x46, 0xfb, 0x5b, 0xf4, 0x0c, 0x86, 0x52, 0x65,
	0xb1, 0x48, 0x8d, 0x86, 0x01, 0x39, 0x97, 0x2a, 0xfb, 0x94, 0xa2, 0x2b, 0x18, 0xea, 0x92, 0xaf,
	0xc5, 0x0f, 0xd7, 0xde, 0x45, 0x28, 0x82, 0x61, 0xa5, 0x9a, 0x32, 0xe1, 0xc1, 0xc0, 0x74, 0x3a,
	0xf0, 0xfa, 0x5b, 0xb9, 0x53, 0x98, 0xae, 0x4c, 0x9a, 0x38, 0x18, 0xba, 0x05, 0x4f, 0x97, 0xe2,
	0x3b, 0xad, 0x79, 0xbc, 0xe1, 0x6d, 0x70, 0x66, 0x9c, 0xbe, 0xc4, 0x76, 0xc3, 0xb8, 0xdb, 0x30,
	0xbe, 0x2b, 0x5a, 0x02, 0x0e, 0xb8, 0xe4, 0x2d, 0x7a, 0x03, 0xa0, 0x1b, 0x26, 0x45, 0x62, 0x58,
	0xe7, 0x86, 0xf5, 0x04, 0xbb, 0xa7, 0xf5, 0xd5, 0x64, 0x96, 0xbc, 0x25, 0x23, 0xdd, 0x1d, 0xd1,
	0x14, 0x1e, 0xef, 0x56, 0xda, 0x59, 0x67, 0x6c, 0xf5, 0x8c, 0x76, 0x3f, 0xdf, 0x1b, 0xfe, 0x85,
	0x6e, 0x79, 0xf8, 0xab, 0x07, 0x93, 0x23, 0xb1, 0x27, 0xd7, 0xe0, 0x43, 0x5f, 0xa4, 0x6e, 0xfa,
	0xbe, 0x48, 0xff, 0x51, 0x34, 0x78, 0x80, 0xa2, 0x25, 0xf8, 0x39, 0xad, 0xf2, 0x98, 0xca, 0x4c,
	0x95, 0xa2, 0xce, 0xb7, 0x66, 0x7a, 0x7f, 0xf6, 0x0a, 0xdb, 0xc7, 0xfe, 0x51, 0x64, 0xa2, 0xa6,
	0x52, 0xb6, 0x2b, 0x91, 0x15, 0x3c, 0xc5, 0x0b, 0x5a, 0xe5, 0x77, 0x1d, 0x96, 0x4c, 0xf2, 0xc3,
	0x90, 0x0d, 0x8d, 0x55, 0xf3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x26, 0xf7, 0x36, 0x33, 0xa0,
	0x03, 0x00, 0x00,
}
